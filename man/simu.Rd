% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu.R
\name{simu}
\alias{simu}
\title{Simulação para Política de Limiar}
\usage{
simu(
  alpha_comp,
  snr,
  rep,
  I = 10,
  policy = "sure",
  filter.number = 10,
  family = "DaubExPhase"
)
}
\arguments{
\item{alpha_comp}{objeto com as \eqn{L} funções componentes, onde cada coluna é uma
função.}

\item{snr}{razão sinal-ruído.}

\item{rep}{quantidade de replicações da simulação.}

\item{I}{quantidade de observações que se deseja gerar.}

\item{policy}{política para escolha de limiar. Os possíveis valores são
"sure", "universal", "cv", "fdr", "logistica", "epanechnikov". Para mais
detalhes, ver \code{\link[wavethresh]{wavethresh::threshold.wd}}.}

\item{filter.number}{controla a suavidade da ondaleta.}

\item{family}{Especifíca a família da ondaleta, e.g. "DaubExPhase",
"DaubLeAsymm".}
}
\value{
Retorna um objeto da classe \code{data.frame} com o cálculo do MSE de cada
função e o AMSE.
}
\description{
Simulação para Política de Limiar
}
\details{
A função assume, para o cálculo da razão sinal-ruído, que \eqn{sd(sinal)=7}.
Os pesos para cada função são gerados aleatóriamente seguindo uma
\eqn{\mathcal{U}(0,1)} e são modificados de forma a garantir que sua soma
seja \eqn{1}.
}
\examples{
fun_comp <- matrix(c(f_test()$bumps, f_test()$doppler), ncol=2)
par(mfrow=c(2,1))
plot(fun_comp[,1], type='l', main='Bumps'); plot(fun_comp[,2], type='l', main='Doppler')

# plan(multisession, workers=2)  # paralelizando execução
simu(fun_comp, rep=4, I=10, snr=5)
}
\references{
Sousa, A.R.S. (2024). A wavelet-based method in aggregated functional data
analysis. \emph{Monte Carlo Methods and Applications}, 30(1), 19-30. DOI:
\href{https://doi.org/10.1515/mcma-2023-2016}{10.1515/mcma-2023-2016}.
}
